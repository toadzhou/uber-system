<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.roncoo.recharge.common.dao.impl.mapper.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.roncoo.recharge.common.entity.Goods" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="seller_id" property="sellerId" jdbcType="BIGINT" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="goods_description" property="goodsDescription" jdbcType="VARCHAR" />
    <result column="default_item_id" property="defaultItemId" jdbcType="BIGINT" />
    <result column="is_marketable" property="isMarketable" jdbcType="INTEGER" />
    <result column="brand_id" property="brandId" jdbcType="BIGINT" />
    <result column="category1_id" property="category1Id" jdbcType="BIGINT" />
    <result column="category2_id" property="category2Id" jdbcType="BIGINT" />
    <result column="category3_id" property="category3Id" jdbcType="BIGINT" />
    <result column="small_image" property="smallImage" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="type_template_id" property="typeTemplateId" jdbcType="BIGINT" />
    <result column="is_enable_spec" property="isEnableSpec" jdbcType="INTEGER" />
    <result column="create_person" property="createPerson" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_person" property="updatePerson" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, seller_id, goods_name, goods_description, default_item_id, is_marketable, brand_id, 
    category1_id, category2_id, category3_id, small_image, price, type_template_id, is_enable_spec, 
    create_person, create_time, update_person, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.roncoo.recharge.common.entity.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_goods
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_goods
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.roncoo.recharge.common.entity.GoodsExample" >
    delete from tb_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.roncoo.recharge.common.entity.Goods" >
    insert into tb_goods (id, seller_id, goods_name, 
      goods_description, default_item_id, is_marketable, 
      brand_id, category1_id, category2_id, 
      category3_id, small_image, price, 
      type_template_id, is_enable_spec, create_person, 
      create_time, update_person, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{sellerId,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, 
      #{goodsDescription,jdbcType=VARCHAR}, #{defaultItemId,jdbcType=BIGINT}, #{isMarketable,jdbcType=INTEGER}, 
      #{brandId,jdbcType=BIGINT}, #{category1Id,jdbcType=BIGINT}, #{category2Id,jdbcType=BIGINT}, 
      #{category3Id,jdbcType=BIGINT}, #{smallImage,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{typeTemplateId,jdbcType=BIGINT}, #{isEnableSpec,jdbcType=INTEGER}, #{createPerson,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updatePerson,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.roncoo.recharge.common.entity.Goods" >
    insert into tb_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="goodsDescription != null" >
        goods_description,
      </if>
      <if test="defaultItemId != null" >
        default_item_id,
      </if>
      <if test="isMarketable != null" >
        is_marketable,
      </if>
      <if test="brandId != null" >
        brand_id,
      </if>
      <if test="category1Id != null" >
        category1_id,
      </if>
      <if test="category2Id != null" >
        category2_id,
      </if>
      <if test="category3Id != null" >
        category3_id,
      </if>
      <if test="smallImage != null" >
        small_image,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="typeTemplateId != null" >
        type_template_id,
      </if>
      <if test="isEnableSpec != null" >
        is_enable_spec,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updatePerson != null" >
        update_person,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsDescription != null" >
        #{goodsDescription,jdbcType=VARCHAR},
      </if>
      <if test="defaultItemId != null" >
        #{defaultItemId,jdbcType=BIGINT},
      </if>
      <if test="isMarketable != null" >
        #{isMarketable,jdbcType=INTEGER},
      </if>
      <if test="brandId != null" >
        #{brandId,jdbcType=BIGINT},
      </if>
      <if test="category1Id != null" >
        #{category1Id,jdbcType=BIGINT},
      </if>
      <if test="category2Id != null" >
        #{category2Id,jdbcType=BIGINT},
      </if>
      <if test="category3Id != null" >
        #{category3Id,jdbcType=BIGINT},
      </if>
      <if test="smallImage != null" >
        #{smallImage,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="typeTemplateId != null" >
        #{typeTemplateId,jdbcType=BIGINT},
      </if>
      <if test="isEnableSpec != null" >
        #{isEnableSpec,jdbcType=INTEGER},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.roncoo.recharge.common.entity.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from tb_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsDescription != null" >
        goods_description = #{record.goodsDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultItemId != null" >
        default_item_id = #{record.defaultItemId,jdbcType=BIGINT},
      </if>
      <if test="record.isMarketable != null" >
        is_marketable = #{record.isMarketable,jdbcType=INTEGER},
      </if>
      <if test="record.brandId != null" >
        brand_id = #{record.brandId,jdbcType=BIGINT},
      </if>
      <if test="record.category1Id != null" >
        category1_id = #{record.category1Id,jdbcType=BIGINT},
      </if>
      <if test="record.category2Id != null" >
        category2_id = #{record.category2Id,jdbcType=BIGINT},
      </if>
      <if test="record.category3Id != null" >
        category3_id = #{record.category3Id,jdbcType=BIGINT},
      </if>
      <if test="record.smallImage != null" >
        small_image = #{record.smallImage,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.typeTemplateId != null" >
        type_template_id = #{record.typeTemplateId,jdbcType=BIGINT},
      </if>
      <if test="record.isEnableSpec != null" >
        is_enable_spec = #{record.isEnableSpec,jdbcType=INTEGER},
      </if>
      <if test="record.createPerson != null" >
        create_person = #{record.createPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatePerson != null" >
        update_person = #{record.updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_goods
    set id = #{record.id,jdbcType=BIGINT},
      seller_id = #{record.sellerId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_description = #{record.goodsDescription,jdbcType=VARCHAR},
      default_item_id = #{record.defaultItemId,jdbcType=BIGINT},
      is_marketable = #{record.isMarketable,jdbcType=INTEGER},
      brand_id = #{record.brandId,jdbcType=BIGINT},
      category1_id = #{record.category1Id,jdbcType=BIGINT},
      category2_id = #{record.category2Id,jdbcType=BIGINT},
      category3_id = #{record.category3Id,jdbcType=BIGINT},
      small_image = #{record.smallImage,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      type_template_id = #{record.typeTemplateId,jdbcType=BIGINT},
      is_enable_spec = #{record.isEnableSpec,jdbcType=INTEGER},
      create_person = #{record.createPerson,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_person = #{record.updatePerson,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.roncoo.recharge.common.entity.Goods" >
    update tb_goods
    <set >
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsDescription != null" >
        goods_description = #{goodsDescription,jdbcType=VARCHAR},
      </if>
      <if test="defaultItemId != null" >
        default_item_id = #{defaultItemId,jdbcType=BIGINT},
      </if>
      <if test="isMarketable != null" >
        is_marketable = #{isMarketable,jdbcType=INTEGER},
      </if>
      <if test="brandId != null" >
        brand_id = #{brandId,jdbcType=BIGINT},
      </if>
      <if test="category1Id != null" >
        category1_id = #{category1Id,jdbcType=BIGINT},
      </if>
      <if test="category2Id != null" >
        category2_id = #{category2Id,jdbcType=BIGINT},
      </if>
      <if test="category3Id != null" >
        category3_id = #{category3Id,jdbcType=BIGINT},
      </if>
      <if test="smallImage != null" >
        small_image = #{smallImage,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="typeTemplateId != null" >
        type_template_id = #{typeTemplateId,jdbcType=BIGINT},
      </if>
      <if test="isEnableSpec != null" >
        is_enable_spec = #{isEnableSpec,jdbcType=INTEGER},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        update_person = #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.roncoo.recharge.common.entity.Goods" >
    update tb_goods
    set seller_id = #{sellerId,jdbcType=BIGINT},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_description = #{goodsDescription,jdbcType=VARCHAR},
      default_item_id = #{defaultItemId,jdbcType=BIGINT},
      is_marketable = #{isMarketable,jdbcType=INTEGER},
      brand_id = #{brandId,jdbcType=BIGINT},
      category1_id = #{category1Id,jdbcType=BIGINT},
      category2_id = #{category2Id,jdbcType=BIGINT},
      category3_id = #{category3Id,jdbcType=BIGINT},
      small_image = #{smallImage,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      type_template_id = #{typeTemplateId,jdbcType=BIGINT},
      is_enable_spec = #{isEnableSpec,jdbcType=INTEGER},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_person = #{updatePerson,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>